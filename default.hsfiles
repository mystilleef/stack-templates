{-# START_FILE package.yaml #-}
name:                {{name}}
version:             0.1.0.0
license:             {{license}}
copyright:           "{{copyright}}{{^copyright}}{{year}}{{^year}}2019{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}"

author:              "{{author-name}}{{^author-name}}Author name here{{/author-name}}"
maintainer:          "{{author-email}}{{^author-email}}example@example.com{{/author-email}}"
github:              "{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}"

synopsis:            Short description of your package
category:            {{category}}{{^category}}utility{{/category}}

description:         https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme

extra-source-files:
- README.md
- ChangeLog.md

default-extensions:
  - Safe
  - NoImplicitPrelude
  - UnicodeSyntax
  - DerivingStrategies
  - NamedFieldPuns
  - RecordWildCards
  - NumericUnderscores
  - MultiWayIf
  - LambdaCase

dependencies:
- base >= 4.7 && < 5

library:
  source-dirs: src
  when:
    - condition: false
      other-modules: Paths_{{name}}
  ghc-options:
    - -j
    - -Weverything
    - -Wcompat
    - -Werror
    - -fno-safe-haskell
    - -Wno-unsafe
    - -Wno-prepositive-qualified-module
    - -Wno-missing-safe-haskell-mode

executables:
  {{name}}-exe:
    main:                Main.hs
    source-dirs:         app
    when:
      - condition: false
        other-modules: Paths_{{name}}
    ghc-options:
      - -Wno-missing-local-signatures
      - -Wno-prepositive-qualified-module
      - -fno-safe-haskell
      - -Wno-unsafe
      - -O2
      - -j
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
    - {{name}}

tests:
  {{name}}-test:
    main:                Spec.hs
    source-dirs:         test
    when:
      - condition: false
        other-modules: Paths_{{name}}
    ghc-options:
      - -Weverything
      - -Wcompat
      - -Werror
      - -Wno-all-missed-specialisations
      - -Wno-prepositive-qualified-module
      - -Wno-missing-exported-signatures
      - -Wno-missing-safe-haskell-mode
      - -Wno-missing-import-lists
      - -Wno-missing-export-lists
      - -fno-safe-haskell
      - -Wno-unsafe
      - -j
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
    - hspec
    - QuickCheck

{-# START_FILE .vscode/tasks.json #-}
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "zsh",
      "type": "process",
      "command": "zsh",
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      },
      "group": "none",
    },
    {
      "label": "stack repl",
      "type": "process",
      "command": "stack",
      "args": [
        "repl",
        "--silent",
        "--no-interleaved-output",
      ],
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "group": "none"
    },
    {
      "label": "stack hoogle",
      "type": "process",
      "command": "stack",
      "args": [
        "hoogle",
        "--silent",
        "--no-interleaved-output",
        "--",
        "generate",
        "--local"
      ],
      "presentation": {
        "echo": false,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      },
    },
    {
      "label": "stack hoogle server",
      "type": "process",
      "command": "stack",
      "args": [
        "hoogle",
        "--",
        "server",
        "--local",
        "--port=8080",
      ],
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "stack run",
      "type": "process",
      "command": "stack",
      "args": [
        "run",
        "--silent",
        "--no-interleaved-output"
      ],
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "stack build",
      "type": "process",
      "command": "stack",
      "args": [
        "build",
        "--haddock-deps",
        "--no-interleaved-output"
      ],
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "group": "build"
    },
    {
      "label": "stack test",
      "type": "process",
      "command": "stack",
      "args": [
        "test",
        "--fast",
        "--silent",
        "--haddock-deps",
        "--no-interleaved-output",
      ],
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      }
    },
    {
      "label": "stack ghcid",
      "type": "process",
      "command": "./stackghcidtest.sh",
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      },
      "group": "test",
    },
  ]
}

{-# START_FILE hie.yaml #-}
cradle:
  stack:
    - path: "./src"
      component: "{{name}}:lib"

    - path: "./app/Main.hs"
      component: "{{name}}:exe:{{name}}-exe"

    - path: "./app/Paths_{{name}}.hs"
      component: "{{name}}:exe:{{name}}-exe"

    - path: "./test"
      component: "{{name}}:test:{{name}}-test"
      
{-# START_FILE .hlint.yaml #-}
- arguments: [-j=4, -XHaskell2010]
- group: { name: default, enabled: true }
- group: { name: dollar, enabled: true }
- group: { name: generalise, enabled: true }
- group: { name: generalise-for-conciseness, enabled: true }
- group: { name: extra, enabled: true }
- group: { name: teaching, enabled: true }
- group: { name: use-lens, enabled: true }
- group: { name: attoparsec, enabled: true }
- group: { name: codeworld, enabled: true }
- group: { name: monomorphic, enabled: true }
- group: { name: future, enabled: true }
- warn: { name: Use module export list }
- warn: { name: Use String }
- ignore: { name: Use infix }

{-# START_FILE .hspec #-}
--format=failed-examples
--failure-report .hspec-failures
--fail-fast
--rerun
--rerun-all-on-success

{-# START_FILE .editorconfig #-}
root = true

[*]
end_of_line = lf
trim_trailing_whitespace = true
insert_final_newline = true
charset = utf-8
indent_style = space
indent_size = 2
max_line_length = 80

[*.sh]
shell_variant      = posix # like -ln=posix
binary_next_line   = true  # like -bn
switch_case_indent = true  # like -ci
space_redirects    = true  # like -sr
keep_padding       = true  # like -kp
function_next_line = true  # like -fn

[*.py]
indent_size = 4

{-# START_FILE stackghcidtest.sh #-}
#!/usr/bin/env bash

PACKAGE="{{name}}"

LIB_TARGET="${PACKAGE}:lib"

TEST_TARGET="${PACKAGE}:test:${PACKAGE}-test"

GHCI_OPTIONS="-w -fobject-code -fno-print-bind-result"

STACK_GHCI_COMMAND="stack ghci $LIB_TARGET \
  --main-is $TEST_TARGET \
  --test \
  --silent \
  --pedantic \
  --ghci-options '$GHCI_OPTIONS' \
  --ghc-options '$GHCI_OPTIONS'"

stack exec -- ghcid --command "${STACK_GHCI_COMMAND}" --test "main"

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE test/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover #-}

{-# START_FILE test/SampleSpec.hs #-}
module SampleSpec (spec) where

import Test.Hspec (Spec, describe, it, parallel, shouldBe)
import Test.QuickCheck (property)
import Prelude (Integer, ($), (.), (==))

spec :: Spec
spec = parallel $ do
  describe "remove this hspec header" $ do
    it "remove this hspec placeholder" $
      23 `shouldBe` (23 :: Integer)

    it "remove this quick check placeholder" . property $
      \x -> x == (x :: Integer)

{-# START_FILE src/Lib.hs #-}
module Lib (runProgram) where

import Prelude (IO, putStrLn)

runProgram :: IO ()
runProgram = putStrLn "running program..."

{-# START_FILE app/Main.hs #-}
module Main (module Main) where

import Lib (runProgram)
import Prelude (IO)

main :: IO ()
main = runProgram

{-# START_FILE README.md #-}
# {{name}}

{-# START_FILE ChangeLog.md #-}
# Changelog for {{name}}

## Unreleased changes

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2019{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
